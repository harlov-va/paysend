{"version":3,"sources":["context/types.tsx","components/ButtonPrimary/ButtonPrimary.tsx","context/State/StateReduce.tsx","utils/mock.ts","utils/utils.ts","context/State/State.tsx","components/H1Component/H1Component.tsx","components/InputNumber/InputNumber.tsx","components/SelectComponent/SelectComponent.tsx","components/InputComponent/InputComponent.tsx","components/GeneratorForm/GeneratorForm.tsx","App.tsx","index.tsx"],"names":["Types","b","block","ButtonPrimary","props","onClick","Button","className","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","handlers","SET_CONFIG","state","payload","config","GENERATE_FORM","controls","CHANGE_VALUE","newValue","control","newControls","i","length","value","StateReducer","action","type","DEFAULT","mockConfig","tags","attributes","css","mockControls","id","name","label","modelName","require","style","marginBottom","border","tooltip","borderRadius","padding","cursor","options","paddingLeft","flexGrow","fetchP","url","method","data","Promise","resolve","reject","status","json","initialState","undefined","StateContext","clone","aObject","v","bObject","Array","isArray","k","createContext","generateForm","getConfig","changeValue","State","useReducer","dispatch","a","response","console","error","Provider","children","setup","el","mod","modValue","H1Component","styled","placeholder","onChange","InputNumber","useState","disabled","setDisabled","min","event","currentTarget","parseInt","toString","SelectComponent","map","InputComponent","GeneratorForm","useContext","component","arr","handleChange","Object","keys","every","includes","createComponent","App","useEffect","application","StylesProvider","injectFirst","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea0cfb44.chunk.js","sourcesContent":["export enum Types {\r\n        CHANGE_VALUE = 'CHANGE_VALUE',\r\n        ADD_PROFIT = 'ADD_PROFIT',\r\n        REMOVE_PROFIT = 'REMOVE_PROFIT',\r\n        CLEAN_FORM = 'CLEAN_FORM',\r\n        SUBMIT_FORM = 'SUBMIT_FORM',\r\n        GENERATE_FORM = 'GENERATE_FORM',\r\n        SET_CONFIG = 'SET_CONFIG',\r\n}\r\n\r\nexport interface IState {\r\n        config?: IConfig;\r\n        controls?: IControl [];\r\n\r\n}\r\n\r\nexport interface IStateContext extends IState {\r\n        generateForm: () => void;\r\n        getConfig: () => void;\r\n        changeValue: (payload: IPayload) => void;\r\n}\r\n\r\nexport interface IPayload {\r\n        config?: IConfig;\r\n        controls?: IControl [];\r\n        newValue?: string;\r\n        control?: IControl;\r\n}\r\n\r\ninterface IConfig {\r\n        tags: string [];\r\n        attributes: string [];\r\n        css: string [];\r\n}\r\n\r\nexport interface ActionType {\r\n        type: Types;\r\n        payload?: IPayload\r\n}\r\n\r\nexport interface HandlersType {\r\n        [name: string]: (state: IState, action: ActionType) => IState;\r\n}\r\n\r\nexport interface IButtonPrimary {\r\n        onClick: () => void;\r\n}\r\n\r\nexport interface IRequestParameters {\r\n        url: string;\r\n        method?: string;\r\n        data?: {[key: string]: any};\r\n}\r\n\r\nexport interface IResponse {\r\n        status: number;\r\n        json: () => IConfig | IControl [];\r\n}\r\n\r\nexport interface IControl {\r\n        id: number;\r\n        name: string;\r\n        value: string;\r\n        label: string;\r\n        placeholder?: string;\r\n        modelName: string;\r\n        style: { [key: string]: string | number | undefined };\r\n        require: boolean;\r\n        tooltip?: string;\r\n        options?: string [];\r\n}\r\n\r\nexport interface IComponentProps extends IControl {\r\n        className: string;\r\n        onChange: (newValue: string) => void;\r\n}","import React from \"react\";\r\nimport block from \"bem-cn-lite\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport './ButtonPrimary.scss';\r\nimport {IButtonPrimary} from \"../../context/types\";\r\n\r\nconst b = block(\"button-primary\");\r\n\r\nconst ButtonPrimary = (props: IButtonPrimary) => {\r\n    const {onClick} = props;\r\n    return (\r\n        <Button className={b()} onClick={onClick}>\r\n            <svg className={b(\"svg\")} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.19 4.37625L11.19 1.26625C11.7 1.03625 12.3 1.03625 12.81 1.26625L19.81 4.37625C20.53 4.69625 21 5.41625 21 6.20625V10.9062C21 16.4563 17.16 21.6462 12 22.9062C6.84 21.6462 3 16.4563 3 10.9062V6.20625C3 5.41625 3.47 4.69625 4.19 4.37625ZM19 11.8962H12V3.09625L5 6.20625V11.9062H12V20.8363C15.72 19.6863 18.47 16.0163 19 11.8962Z\" fill=\"#EEBB50\"/>\r\n            </svg>\r\n            Сгенерировать форму\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ButtonPrimary;\r\n","import {Types, IState, ActionType, HandlersType, IPayload} from \"../types\";\r\n\r\nconst handlers: HandlersType = {\r\n    [Types.SET_CONFIG]: (state: IState, {payload}) => {\r\n        if (!payload) return state;\r\n        const {config} = payload;\r\n \r\n        return {...state, config}\r\n    },\r\n    [Types.GENERATE_FORM]: (state: IState, {payload}) => {\r\n        if (!payload) return state;\r\n        const {controls} = payload;\r\n \r\n        return {...state, controls}\r\n    },\r\n    [Types.CHANGE_VALUE]: (state: IState, {payload}) => {\r\n        if (!payload) return state;\r\n        const {newValue, control} = payload;\r\n        const {controls} = state;\r\n        if (!controls) return state;\r\n        const newControls = [...controls];\r\n        for (let i = 0; i < newControls.length; i++ ) {\r\n            if (newControls[i] === control && newValue) newControls[i].value = newValue;\r\n        }\r\n \r\n        return {...state, controls: newControls}\r\n    },\r\n    DEFAULT: (state: IState) => state,\r\n}\r\n\r\nexport const StateReducer = (state: IState, action:ActionType):IState => {\r\n    const handler = handlers[action.type] || handlers.DEFAULT;\r\n    return handler(state, action);\r\n}\r\n","export const mockConfig = {\r\n    tags: ['!doctype', 'a', 'abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'b', 'base', 'basefont', 'bb', 'bdo', 'big', 'blockquote', 'body', 'br /', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'command', 'datagrid', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'em', 'embed', 'eventsource', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'frame', 'frameset', 'h1', 'to', 'h6', 'head', 'header', 'hgroup', 'hr /', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'isindex', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'map', 'mark', 'menu', 'meta', 'meter', 'nav', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strike', 'strong', 'style', 'sub', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr'],\r\n    attributes: ['accept', 'accept-charset', 'accesskey', 'action', 'align', 'allow', 'alt', 'async', 'autocapitalize', 'autocomplete', 'autofocus', 'autoplay', 'background bgcolor border buffered', 'capture', 'challenge', 'charset', 'checked', 'cite', 'class', 'code', 'codebase', 'color cols', 'colspan', 'content', 'contenteditable', 'contextmenu', 'controls', 'coords', 'crossorigin', 'csp', \r\n    'data', 'data-*', 'datetime', 'decoding', 'default', 'defer', 'dir', 'dirname', 'disabled', 'download', 'draggable', 'enctype', 'enterkeyhint', 'for', 'form', 'formaction', 'formenctype', 'formmethod', 'formnovalidate', 'formtarget', 'headers', 'height hidden', 'high', 'href', 'hreflang', 'http-equiv', 'icon', 'id', 'importance',\r\n    'integrity', 'intrinsicsize','inputmode', 'ismap', 'itemprop', 'keytype', 'kind', 'label', 'lang', 'language','loading', 'list', 'loop', 'low', 'manifest',\r\n    'max', 'maxlength', 'minlength', 'media', 'method', 'min', 'multiple', 'muted', 'name', 'novalidate', 'open', 'optimum', 'pattern', 'ping', 'placeholder', 'poster', 'preload', 'radiogroup', 'readonly', 'referrerpolicy', 'rel', 'required', 'reversed', 'rows', 'rowspan', 'sandbox', 'scope', 'scoped', \r\n    'selected', 'shape', 'size', 'sizes', 'slot', 'span', 'spellcheck', 'src', 'srcdoc', 'srclang', 'srcset', 'start', 'step', 'style', 'summary', \r\n    'tabindex', 'target', 'title', 'translate', 'type', 'usemap', 'value', 'width', 'wrap'],\r\n    css: ['backgroundColor','border', '-webkit-line-clamp', 'accent-color', ':active', 'additive-symbols', '(@counter-style)', '::after', '(:after)', 'align-content', 'align-items', 'align-self', 'align-tracks', 'all', '<an-plus-b>', '<angle>', '<angle-percentage>', 'animation', 'animation-delay', 'animation-direction', 'animation-duration', 'animation-fill-mode', 'animation-iteration-count', 'animation-name', 'animation-play-state', 'animation-timing-function', '@annotation', 'annotation()', ':any-link', 'appearance', 'ascent-override', '(@font-face)', 'aspect-ratio', 'attr()', '::backdrop', 'backdrop-filter', 'backface-visibility', 'background', 'background-attachment', 'background-blend-mode', 'background-clip', 'background-color', 'background-image', 'background-origin', 'background-position', 'background-position-x', 'background-position-y', 'background-repeat', 'background-size', '<basic-shape>', '::before', '(:before)', ':blank', 'bleed', '(@page)', '<blend-mode>', 'block-overflow', 'block-size', 'blur()', 'border', 'border-block', 'border-block-color', 'border-block-end', 'border-block-end-color', 'border-block-end-style', 'border-block-end-width', 'border-block-start', 'border-block-start-color', 'border-block-start-style', 'border-block-start-width', 'border-block-style', 'border-block-width', 'border-bottom', 'border-bottom-color', 'border-bottom-left-radius', 'border-bottom-right-radius', 'border-bottom-style', 'border-bottom-width', 'border-collapse', 'border-color', 'border-end-end-radius', 'border-end-start-radius', 'border-image', 'border-image-outset', 'border-image-repeat', 'border-image-slice', 'border-image-source', 'border-image-width', 'border-inline', 'border-inline-color', 'border-inline-end', 'border-inline-end-color', 'border-inline-end-style', 'border-inline-end-width', 'border-inline-start', 'border-inline-start-color', 'border-inline-start-style', 'border-inline-start-width', 'border-inline-style', 'border-inline-width', 'border-left', 'border-left-color', 'border-left-style', 'border-left-width', 'border-radius', 'border-right', 'border-right-color', 'border-right-style', 'border-right-width', 'border-spacing', 'border-start-end-radius', 'border-start-start-radius', 'border-style', 'border-top', 'border-top-color', 'border-top-left-radius', 'border-top-right-radius', 'border-top-style', 'border-top-width', 'border-width', 'bottom', '@bottom-center', 'box-decoration-break', 'box-shadow', 'box-sizing', 'break-after', 'break-before', 'break-inside', 'brightness()', 'calc()', 'caption-side', 'caret-color', '@character-variant', 'character-variant()', '@charset', ':checked', 'circle()', 'clamp()', 'clear', 'clip', 'clip-path', '<color>', 'color', 'color-adjust', 'color-scheme', 'column-count', 'column-fill', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-style', 'column-rule-width', 'column-span', 'column-width', 'columns', 'conic-gradient()', 'contain', 'content', 'content-visibility', 'contrast()', '<counter>', 'counter-increment', 'counter-reset', 'counter-set', '@counter-style', 'counters()', 'cross-fade()', 'cubic-bezier()', '::cue', '::cue-region', ':current', 'cursor', '<custom-ident>', 'length#ch', 'length#cm', 'angle#deg', ':default', ':defined', 'descent-override', '(@font-face)', '<dimension>', ':dir', 'direction', ':disabled', 'display', '<display-box>', '<display-inside>', '<display-internal>', '<display-legacy>', '<display-listitem>', '<display-outside>', 'drop-shadow()', 'resolution#dpcm', 'resolution#dpi', 'resolution#dppx', 'element()', 'ellipse()', ':empty', 'empty-cells', ':enabled', 'env()', 'length#em', 'length#ex', 'fallback', '(@counter-style)', 'filter', '<filter-function>', ':first', ':first-child', '::first-letter', '(:first-letter)', '::first-line', '(:first-line)', ':first-of-type', 'fit-content()', '<flex>', 'flex', 'flex-basis', 'flex-direction', 'flex-flow', 'flex-grow', 'flex-shrink', 'flex-wrap', 'flex_value#fr', 'float', ':focus', ':focus-visible', ':focus-within', 'font', 'font-display', '(@font-face)', '@font-face', 'font-family', 'font-family', '(@font-face)', 'font-feature-settings', 'font-feature-settings', '(@font-face)', '@font-feature-values', 'font-kerning', 'font-language-override', 'font-optical-sizing', 'font-size', 'font-size-adjust', 'font-stretch', 'font-stretch', '(@font-face)', 'font-style', 'font-style', '(@font-face)', 'font-synthesis', 'font-variant', 'font-variant', '(@font-face)', 'font-variant-alternates', 'font-variant-caps', 'font-variant-east-asian', 'font-variant-ligatures', 'font-variant-numeric', 'font-variant-position', 'font-variation-settings', 'font-variation-settings', '(@font-face)', 'font-weight', 'font-weight', '(@font-face)', 'forced-color-adjust', 'format()', '<frequency>', '<frequency-percentage>', ':fullscreen', ':future', 'angle#grad', 'gap', '<gradient>', '::grammar-error', 'grayscale()', 'grid', 'grid-area', 'grid-auto-columns', 'grid-auto-flow', 'grid-auto-rows', 'grid-column', 'grid-column-end', 'grid-column-start', 'grid-row', 'grid-row-end', 'grid-row-start', 'grid-template', 'grid-template-areas', 'grid-template-columns', 'grid-template-rows', 'frequency#Hz', 'hanging-punctuation', ':has', 'height', 'height', '(@viewport)', '@historical-forms', ':host()', ':host-context()', ':hover', 'hsl()', 'hsla()', 'hue-rotate()', 'hyphens', '<ident>', '<image>', 'image()', 'image-orientation', 'image-rendering', 'image-resolution', 'image-set()', '@import', ':in-range', ':indeterminate', 'inherit', 'inherits', '(@property)', 'initial', 'initial-letter', 'initial-letter-align', 'initial-value', '(@property)', 'inline-size', 'inset', 'inset()', 'inset-block', 'inset-block-end', 'inset-block-start', 'inset-inline', 'inset-inline-end', 'inset-inline-start', '<integer>', ':invalid', 'invert()', ':is', 'isolation', 'length#in', 'justify-content', 'justify-items', 'justify-self', 'justify-tracks', 'frequency#kHz', '@keyframes', ':lang', ':last-child', ':last-of-type', 'leader()', ':left', 'left', '@left-bottom', '<length>', '<length-percentage>', 'letter-spacing', 'line-break', 'line-clamp', 'line-gap-override', '(@font-face)', 'line-height', 'line-height-step', 'linear-gradient()', ':link', 'list-style', 'list-style-image', 'list-style-position', 'list-style-type', 'local()', ':local-link', 'length#mm', 'margin', 'margin-block', 'margin-block-end', 'margin-block-start', 'margin-bottom', 'margin-inline', 'margin-inline-end', 'margin-inline-start', 'margin-left', 'margin-right', 'margin-top', 'margin-trim', '::marker', 'marks', '(@page)', 'mask', 'mask-border', 'mask-border-mode', 'mask-border-outset', 'mask-border-repeat', 'mask-border-slice', 'mask-border-source', 'mask-border-width', 'mask-clip', 'mask-composite', 'mask-image', 'mask-mode', 'mask-origin', 'mask-position', 'mask-repeat', 'mask-size', 'mask-type', 'masonry-auto-flow', 'math-style', 'matrix()', 'matrix3d()', 'max()', 'max-block-size', 'max-height', 'max-height', '(@viewport)', 'max-inline-size', 'max-lines', 'max-width', 'max-width', '(@viewport)', 'max-zoom', '(@viewport)', '@media', 'min()', 'min-block-size', 'min-height', 'min-height', '(@viewport)', 'min-inline-size', 'min-width', 'min-width', '(@viewport)', 'min-zoom', '(@viewport)', 'minmax()', 'mix-blend-mode', 'time#ms', '@namespace', 'negative', '(@counter-style)', ':not', ':nth-child', ':nth-col', ':nth-last-child', ':nth-last-col', ':nth-last-of-type', ':nth-of-type', '<number>', 'object-fit', 'object-position', 'offset', 'offset-anchor', 'offset-distance', 'offset-path', 'offset-position', 'offset-rotate', ':only-child', ':only-of-type', 'opacity', 'opacity()', ':optional', 'order', 'orientation', '(@viewport)', '@ornaments', 'ornaments()', 'orphans', ':out-of-range', 'outline', 'outline-color', 'outline-offset', 'outline-style', 'outline-width', 'overflow', 'overflow-anchor', 'overflow-block', 'overflow-clip-margin', 'overflow-inline', 'overflow-wrap', 'overflow-x', 'overflow-y', 'overscroll-behavior', 'overscroll-behavior-block', 'overscroll-behavior-inline', 'overscroll-behavior-x', 'overscroll-behavior-y', 'Pseudo-classes', 'Pseudo-elements', 'length#pc', 'length#pt', 'length#px', 'pad', '(@counter-style)', 'padding', 'padding-block', 'padding-block-end', 'padding-block-start', 'padding-bottom', 'padding-inline', 'padding-inline-end', 'padding-inline-start', 'padding-left', 'padding-right', 'padding-top', '@page', 'page-break-after', 'page-break-before', 'page-break-inside', 'paint()', 'paint-order', '::part', ':past', 'path()', ':paused', '<percentage>', 'perspective', 'perspective()', 'perspective-origin', ':picture-in-picture', 'place-content', 'place-items', 'place-self', '::placeholder', ':placeholder-shown', ':playing', 'pointer-events', 'polygon()', '<position>', 'position', 'prefix', '(@counter-style)', '@property', 'length#Q', 'quotes', 'angle#rad', 'length#rem', 'radial-gradient()', 'range', '(@counter-style)', '<ratio>', ':read-only', ':read-write', 'rect()', 'repeat()', 'repeating-linear-gradient()', 'repeating-radial-gradient()', ':required', 'resize', '<resolution>', 'revert', 'rgb()', 'rgba()', ':right', 'right', '@right-bottom', ':root', 'rotate', 'rotate()', 'rotate3d()', 'rotateX()', 'rotateY()', 'rotateZ()', 'row-gap', 'ruby-align', 'ruby-merge', 'ruby-position', 'saturate()', 'scale', 'scale()', 'scale3d()', 'scaleX()', 'scaleY()', 'scaleZ()', ':scope', 'scroll-behavior', 'scroll-margin', 'scroll-margin-block', 'scroll-margin-block-end', 'scroll-margin-block-start', 'scroll-margin-bottom', 'scroll-margin-inline', 'scroll-margin-inline-end', 'scroll-margin-inline-start', 'scroll-margin-left', 'scroll-margin-right', 'scroll-margin-top', 'scroll-padding', 'scroll-padding-block', 'scroll-padding-block-end', 'scroll-padding-block-start', 'scroll-padding-bottom', 'scroll-padding-inline', 'scroll-padding-inline-end', 'scroll-padding-inline-start', 'scroll-padding-left', 'scroll-padding-right', 'scroll-padding-top', 'scroll-snap-align', 'scroll-snap-stop', 'scroll-snap-type', 'scrollbar-color', 'scrollbar-gutter', 'scrollbar-width', '::selection', 'selector()', 'sepia()', '<shape>', 'shape-image-threshold', 'shape-margin', 'shape-outside', 'size', '(@page)', 'size-adjust', '(@font-face)', 'skew()', 'skewX()', 'skewY()', '::slotted', 'speak-as', '(@counter-style)', '::spelling-error', 'src', '(@font-face)', 'steps()', '<string>', '@styleset', 'styleset()', '@stylistic', 'stylistic()', 'suffix', '(@counter-style)', '@supports', '@swash', 'swash()', 'symbols', '(@counter-style)', 'symbols()', 'syntax', '(@property)', 'system', '(@counter-style)', 'time#s', 'angle#turn', 'tab-size', 'table-layout', ':target', 'target-counter()', 'target-counters()', '::target-text', 'target-text()', ':target-within', 'text-align', 'text-align-last', 'text-combine-upright', 'text-decoration', 'text-decoration-color', 'text-decoration-line', 'text-decoration-skip', 'text-decoration-skip-ink', 'text-decoration-style', 'text-decoration-thickness', 'text-emphasis', 'text-emphasis-color', 'text-emphasis-position', 'text-emphasis-style', 'text-indent', 'text-justify', 'text-orientation', 'text-overflow', 'text-rendering', 'text-shadow', 'text-size-adjust', 'text-transform', 'text-underline-offset', 'text-underline-position', '<time>', '<time-percentage>', '<timing-function>', 'top', '@top-center', 'touch-action', 'transform', 'transform-box', '<transform-function>', 'transform-origin', 'transform-style', 'transition', 'transition-delay', 'transition-duration', 'transition-property', 'transition-timing-function', 'translate', 'translate()', 'translate3d()', 'translateX()', 'translateY()', 'translateZ()', 'type()', 'unicode-bidi', 'unicode-range', '(@font-face)', 'unset', '<url>', 'url()', ':user-invalid', 'user-select', ':user-valid', 'user-zoom', '(@viewport)', 'length#vh', 'length#vmax', 'length#vmin', 'length#vw', ':valid', 'var()', 'vertical-align', '@viewport', 'viewport-fit', '(@viewport)', 'visibility', ':visited', ':where', 'white-space', 'widows', 'width', 'width', '(@viewport)', 'will-change', 'word-break', 'word-spacing', 'word-wrap', 'writing-mode', 'resolution#x', 'z-index', 'zoom', '(@viewport)']\r\n};\r\n\r\nexport const mockControls = [\r\n    {\r\n        id: 1,\r\n        name: 'h1',\r\n        value: 'Анкета',\r\n        label: 'Имя',\r\n        modelName: 'H1Component',\r\n        require: true,\r\n        style: {\r\n            '&.h1-component': {\r\n                marginBottom: '20px',\r\n            },\r\n        }\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'input',\r\n        value: '',\r\n        label: 'Имя',\r\n        modelName: 'InputComponent',\r\n        require: true,\r\n        style: {\r\n            '&.input-component': {\r\n                marginBottom: '20px',\r\n            },\r\n            '& .input-component__input': {\r\n                border: '1px solid #dedede',\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'input',\r\n        value: 1,\r\n        label: 'Возраст',\r\n        modelName: 'InputNumber',\r\n        require: true,\r\n        tooltip: 'Введите ваш возраст',\r\n        style: {\r\n            marginBottom: '20px',\r\n            '& input': {\r\n                width: '50px',\r\n                border: '1px solid #dedede',\r\n                borderRadius: '5px',\r\n                padding: '5px 15px 5px 15px',\r\n            },\r\n            '& .input-number__plus': {\r\n                cursor: 'pointer',\r\n            },\r\n            '& .input-number__minus': {\r\n                cursor: 'pointer',\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'select',\r\n        value: 'Не женат/не замужем',\r\n        label: 'Семейное положение',\r\n        modelName: 'SelectComponent',\r\n        require: true,\r\n        options: ['Не женат/не замужем','Разведен/разведена','Замужем/женат'],\r\n        style: {\r\n            '&.select-component': {                \r\n                marginBottom: '20px',\r\n             },\r\n            '& .select-component__select': {\r\n                width: '200px',\r\n                paddingLeft: '15px',\r\n                border: '1px solid #dedede',\r\n                flexGrow: 0,\r\n            }\r\n        }\r\n    },\r\n]","import { IRequestParameters, IResponse } from \"context/types\";\r\nimport { useEffect, RefObject } from \"react\";\r\nimport { mockConfig, mockControls } from \"./mock\";\r\n\r\nexport const rnd1000 = () => Math.floor(Math.random() * 1000) + 1;\r\n\r\nexport const is = (obj: any, keys: any) => {\r\n    return obj && obj.hasOwnProperty(keys) ? obj[keys] : null;\r\n}\r\n\r\nexport function clone(aObject: any) {\r\n    if (!aObject) {\r\n        return aObject;\r\n    }\r\n\r\n    let v;\r\n    let bObject: {[key: string]: any} = Array.isArray(aObject) ? [] : {};\r\n    for (const k in aObject) {\r\n        v = aObject[k];\r\n        bObject[k] = (typeof v === \"object\") ? clone(v) : v;\r\n    }\r\n\r\n    return bObject;\r\n}\r\n\r\nexport function isNullUndefined (value: any) {\r\n    return value === undefined || value === null;\r\n}\r\n\r\nexport function removeItem (array: any [], value: any) {\r\n    const index = array.indexOf(value);\r\n    if (index > -1) {\r\n        array.splice(index, 1);\r\n    }\r\n}\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nexport function useOnClickOutside<HTMLFormElement>(\r\n    ref: RefObject<HTMLElement>,\r\n    handler: (event: AnyEvent) => void,\r\n): void {\r\n    useEffect(() => {\r\n        const listener = (event: AnyEvent) => {\r\n            const el = ref?.current\r\n\r\n            // Do nothing if clicking ref's element or descendent elements\r\n            const node:any = event.target;\r\n            if (!el || el.contains(node)) {\r\n                return\r\n            }\r\n\r\n            handler(event)\r\n        }\r\n\r\n        document.addEventListener(`mousedown`, listener)\r\n        document.addEventListener(`touchstart`, listener)\r\n\r\n        return () => {\r\n            document.removeEventListener(`mousedown`, listener)\r\n            document.removeEventListener(`touchstart`, listener)\r\n        }\r\n\r\n        // Reload only if ref or handler changes\r\n    }, [ref, handler])\r\n}\r\n\r\nexport function fetchP(payload: IRequestParameters): Promise<any> {\r\n    const {url, method, data} = payload;\r\n    // настоящий fetch\r\n    // return fetch(url, {\r\n    //     method: method ? method : `GET`,\r\n    //     headers: {\r\n    //         'Content-Type': 'application/json',\r\n    //     },\r\n    //     body: JSON.stringify(data),\r\n    //     credentials: 'include'\r\n    // })\r\n\r\n    // не настоящий :)\r\n    switch (url) {\r\n        case `/storage-api/get-config`: return new Promise((resolve, reject) => {\r\n            resolve( {\r\n                status: 200,\r\n                json: function () {\r\n                    return mockConfig;\r\n                }\r\n            })      \r\n        });\r\n        default: return new Promise((resolve, reject) => {\r\n            resolve( {\r\n                status: 200,\r\n                json: function () {\r\n                    return mockControls;\r\n                }\r\n            })      \r\n        });\r\n    }\r\n}\r\n\r\nexport function containProperties (arr: string [], target: string []) {\r\n    return target.every(v => arr.includes(v));\r\n}","import React, {useReducer, createContext} from 'react';\r\nimport {StateReducer} from \"./StateReduce\";\r\nimport {Types, IState, IStateContext, IPayload, } from \"../types\";\r\nimport {clone, fetchP} from \"../../utils/utils\";\r\n\r\nconst initialState: IState = {\r\n    config: undefined,\r\n    controls: undefined,\r\n}\r\n\r\nexport const cloneState: IState = clone(initialState);\r\n\r\nexport const StateContext = createContext<IStateContext>({\r\n    ...initialState,\r\n    generateForm: () => void 0,\r\n    getConfig: () => void 0,\r\n    changeValue: (payload) => void 0,\r\n});\r\n\r\ninterface StateProps {\r\n    children?: JSX.Element\r\n}\r\n\r\nexport const State = (props: StateProps) => {\r\n    const [state, dispatch] = useReducer(StateReducer, initialState);\r\n    // получаем конфигурацию для всего приложения\r\n    const getConfig = async () => {\r\n        // setLoading();\r\n        let ok = false;\r\n        let response = null;\r\n        let config = null;\r\n        try {\r\n            response = await fetchP({url: `/storage-api/get-config`, method: `GET`});\r\n            ok = response.status === 200;\r\n            if (ok) config = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        } finally {\r\n            // finishLoading();\r\n        }\r\n\r\n        dispatch({\r\n            type: Types.SET_CONFIG,\r\n            payload: {\r\n                config,\r\n            },\r\n        });\r\n    }\r\n\r\n    const changeValue = (payload: IPayload) => dispatch({type: Types.CHANGE_VALUE, payload});\r\n\r\n    // получаем массив элементов для создания Анкеты\r\n    const generateForm = async () => {\r\n        // setLoading();\r\n        let ok = false;\r\n        let response = null;\r\n        let controls = null;\r\n        try {\r\n            response = await fetchP({url: `/storage-api/get-controls`, method: `GET`});\r\n            ok = response.status === 200;\r\n            if (ok) controls = await response.json();\r\n        } catch (e) {\r\n            console.error(e);\r\n        } finally {\r\n            // finishLoading();\r\n        }\r\n\r\n        dispatch({\r\n            type: Types.GENERATE_FORM,\r\n            payload: {\r\n                controls,\r\n            },\r\n        });\r\n    }\r\n\r\n    return (\r\n        <StateContext.Provider value={{\r\n                ...state, getConfig, generateForm, changeValue\r\n        }}>\r\n            {props.children}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport block from \"bem-cn-lite\";\r\nimport { styled } from '@material-ui/core';\r\nimport { IComponentProps } from 'context/types';\r\nimport {useState} from 'react';\r\n\r\nblock.setup({\r\n    el: '__',\r\n    mod: '--',\r\n    modValue: '--'\r\n  });\r\n\r\nconst b = block('h1-component');\r\n\r\nconst CustomH1Component = ({className, value, label, placeholder, require, onChange}: IComponentProps) => {\r\n    return (\r\n        <h1 className={className + ' ' + b()}>{value}</h1>\r\n    )\r\n}\r\n\r\nconst H1Component = styled(CustomH1Component)(({style}: any) => style );\r\n\r\nexport default H1Component;","import React from 'react';\r\nimport block from \"bem-cn-lite\";\r\nimport './InputNumber.scss';\r\nimport { styled } from '@material-ui/core';\r\nimport { IComponentProps } from 'context/types';\r\nimport {useState} from 'react';\r\n\r\nblock.setup({\r\n    el: '__',\r\n    mod: '--',\r\n    modValue: '--'\r\n  });\r\n\r\nconst b = block('input-number');\r\n\r\nconst CustomInputNumber = ({className, value, label, placeholder, require, onChange}: IComponentProps) => {\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    const handleClickPlus = () => {\r\n        const v = parseInt(value) + 1;\r\n        if (v > 1) setDisabled(false);\r\n        onChange(v.toString());\r\n    }\r\n\r\n    const handleClickMinus = () => {\r\n        if (parseInt(value) === 1) return;\r\n        if (parseInt(value) === 2) {\r\n            setDisabled(true);            \r\n        };\r\n        onChange((parseInt(value) - 1).toString());\r\n    }\r\n\r\n    const handleChangeInput = (event: any) => {\r\n        const newValue = event.currentTarget.value;\r\n        onChange(newValue);\r\n    }\r\n\r\n    return (\r\n        <div className={className + ' ' + b()}>\r\n            <span>\r\n                {label}\r\n                {require && <span className={b('star', { require })}>*</span>}\r\n            </span>            \r\n            <div className={b('input-wrapper')}>\r\n                <input className={b('input')} min=\"0\" value={value} type=\"number\" onChange={handleChangeInput}/>\r\n                <div className={b('buttons-wrapper')}>\r\n                    <button className={b('plus')} onClick={handleClickPlus} type=\"button\">▲</button>                \r\n                    <button className={b('minus',{disabled})} onClick={handleClickMinus} type=\"button\">▼</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InputNumber = styled(CustomInputNumber)(({style}: any) => style );\r\n\r\nexport default InputNumber;","import React from 'react';\r\nimport block from \"bem-cn-lite\";\r\nimport './SelectComponent.scss';\r\nimport { styled } from '@material-ui/core';\r\nimport { IComponentProps } from 'context/types';\r\n\r\nblock.setup({\r\n    el: '__',\r\n    mod: '--',\r\n    modValue: '--'\r\n  });\r\n\r\nconst b = block(\"select-component\");\r\n\r\nconst CustomSelectComponent = ({className, value, label, placeholder, require, onChange, options}: IComponentProps) => {\r\n    return (\r\n        <div className={className + ' ' + b()}>\r\n            <p className={b('label')}>\r\n                {label}\r\n                {require && <span className={b('star', { require })}>*</span>}\r\n            </p>            \r\n            <select \r\n                className={b('select')} \r\n                value={value} \r\n                placeholder={placeholder}\r\n                onChange={(event) => onChange(event.currentTarget.value)}\r\n            >    \r\n                {options?.map((el) => <option key={`SelectComponent__Option ${el}`} value={el}>{el}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SelectComponent = styled(CustomSelectComponent)(({style}: any) => style );\r\n\r\nexport default SelectComponent;","import React from 'react';\r\nimport block from \"bem-cn-lite\";\r\nimport './InputComponent.scss';\r\nimport { styled } from '@material-ui/core';\r\nimport { IComponentProps } from 'context/types';\r\n\r\nblock.setup({\r\n    el: '__',\r\n    mod: '--',\r\n    modValue: '--'\r\n  });\r\n\r\nconst b = block(\"input-component\");\r\n\r\nconst CustomInput = ({className, value, label, placeholder, require, onChange}: IComponentProps) => {\r\n    return (\r\n        <p className={className + ' ' + b()}>\r\n            <span>\r\n                {label}\r\n                {require && <span className={b('star', { require })}>*</span>}\r\n            </span>            \r\n            <input \r\n                className={b('input')} \r\n                value={value} \r\n                placeholder={placeholder}\r\n                onChange={(event) => onChange(event.currentTarget.value)}\r\n            >                \r\n            </input>\r\n        </p>\r\n    )\r\n}\r\n\r\nconst InputComponent = styled(CustomInput)(({style}: any) => style );\r\n\r\nexport default InputComponent;","import H1Component from 'components/H1Component/H1Component';\r\nimport InputNumber from 'components/InputNumber/InputNumber';\r\nimport SelectComponent from 'components/SelectComponent/SelectComponent';\r\nimport { StateContext } from 'context/State/State';\r\nimport { IControl } from 'context/types';\r\nimport React from 'react';\r\nimport { useContext } from 'react';\r\nimport { containProperties } from 'utils/utils';\r\nimport InputComponent from '../InputComponent/InputComponent';\r\nimport block from \"bem-cn-lite\";\r\nimport './GeneratorForm.scss';\r\n\r\nconst b = block(\"generator-form\");\r\n\r\nconst GeneratorForm = () => {\r\n    const { config, controls, changeValue } = useContext(StateContext);\r\n\r\n    const createComponent = (control: IControl) => {\r\n        const handleChange = (newValue: string, control: IControl) => {\r\n            changeValue({ newValue, control });\r\n        }\r\n\r\n        let component;\r\n\r\n        // таким способом проверяю правильные названия css-свойств\r\n        // которые возможно были введенны в ручную в редакторе конфигов\r\n        if (config && !containProperties(config.css, Object.keys(control.style))) {\r\n            // это заготовка проверки ICustomComponent\r\n            // к сожелению силы духа переписать уже имеющийся компонент\r\n            // не хватило\r\n            // console.error(`Одно из css-свойств нераспознанно`);\r\n        }\r\n        switch (control.modelName) {\r\n            case 'InputComponent': component = <InputComponent\r\n                key={control.id}\r\n                value={control.value}\r\n                label={control.label}\r\n                placeholder={control.placeholder}\r\n                style={control.style}\r\n                require={control.require}\r\n                onChange={(newValue: string) => handleChange(newValue, control)}\r\n            />;\r\n                break;\r\n            case 'InputNumber': component = <InputNumber\r\n                key={control.id}\r\n                value={control.value}\r\n                label={control.label}\r\n                placeholder={control.placeholder}\r\n                style={control.style}\r\n                require={control.require}\r\n                tooltip={control.tooltip}\r\n                onChange={(newValue: string) => handleChange(newValue, control)}\r\n            />;\r\n                break;\r\n            case 'H1Component': component = <H1Component\r\n                key={control.id}\r\n                value={control.value}\r\n                label={control.label}\r\n                placeholder={control.placeholder}\r\n                style={control.style}\r\n                require={control.require}\r\n                tooltip={control.tooltip}\r\n                onChange={(newValue: string) => handleChange(newValue, control)}\r\n            />;\r\n                break;\r\n            case 'SelectComponent': component = <SelectComponent\r\n                key={control.id}\r\n                value={control.value}\r\n                label={control.label}\r\n                placeholder={control.placeholder}\r\n                style={control.style}\r\n                require={control.require}\r\n                tooltip={control.tooltip}\r\n                onChange={(newValue: string) => handleChange(newValue, control)}\r\n                options={control.options}\r\n            />;\r\n                break;\r\n        }\r\n        return component;\r\n    }\r\n\r\n    if (!controls || !controls.length) return null;\r\n    return (\r\n        <form className={b()}>\r\n            {controls.map((control) => (\r\n                createComponent(control)\r\n            ))}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default GeneratorForm;","import React, {useContext, useState, useEffect} from \"react\";\r\nimport block from \"bem-cn-lite\";\r\nimport \"./App.scss\";\r\nimport ButtonPrimary from './components/ButtonPrimary/ButtonPrimary';\r\nimport {StateContext} from \"./context/State/State\";\r\nimport GeneratorForm from \"components/GeneratorForm/GeneratorForm\";\r\n\r\n\r\nconst b = block(\"app\");\r\n\r\nexport default function App(): JSX.Element {\r\n    const { getConfig, generateForm} = useContext(StateContext);\r\n\r\n    useEffect(() => {\r\n        getConfig();\r\n    }, []);\r\n\r\n    return (\r\n        <div className={b()}>\r\n            <div className={b('button-wrapper')}>\r\n                <ButtonPrimary onClick={() => generateForm()}></ButtonPrimary>\r\n            </div>\r\n            <GeneratorForm/>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { StylesProvider } from \"@material-ui/core/styles\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\nimport {State} from \"./context/State/State\";\r\n\r\nconst application = (\r\n    <StylesProvider injectFirst>\r\n        <State>\r\n            <App/>\r\n        </State>\r\n    </StylesProvider>\r\n)\r\n\r\nReactDOM.render(\r\n    application,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}